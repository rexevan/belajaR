---
title: "Mengekstrak Data SIMDASI"
author: "rexevan"
format: html
---

## Pendahuluan 

Melanjutkan dari sebelumnya, kita punya fungsi sebagai berikut. 

1. `simdasi_get_area()`

Untuk mengambil daftar wilayah (Kode Provinsi, Kabupaten, Kecamatan).

2. `simdasi_get_table()`

Untuk mengambil informasi mengenai tabel.

3. `simdasi_get_data()`

Untuk mengambil data SIMDASI.

```{r custom-functions}

library(tidyverse)
library(httr2)

simdasi_get_area <- function(level = NULL, kdprov = "00", kdkab = "00", key = Sys.getenv("WebAPI_KEY")) {
    
    if(is.null(level)) {
        stop("level tidak boleh NULL, harus terisi 'prov', 'kab' atau 'kec'")
    } 
    
    if(!is.character(level)) {
        stop("class dari level yang diisi harus karakter. Level yang diisi sekarang memiliki class :")
        class(level)
    }
    
    if(level != "prov" & level != "kab" & level != "kec") {
        stop("level harus terisi 'prov', 'kab' atau 'kec'")
    } 
    
    # Provinsi
    if(level == "prov") {
        url_awal <- "https://webapi.bps.go.id/v1/api/interoperabilitas/datasource/simdasi/id/26/"
        req <- request(url_awal) |>
            req_url_path_append("key", key)
    } 
    
    # Kabupaten
    if(level == "kab") {
        url_awal <- "https://webapi.bps.go.id/v1/api/interoperabilitas/datasource/simdasi/id/27/"
        parent <- paste0(kdprov, "00000")
        req <- request(url_awal) |>
            req_url_path_append("parent", parent) |>
            req_url_path_append("key", key)
    }
    
    # Kecamatan 
    if(level == "kec") {
        url_awal <- "https://webapi.bps.go.id/v1/api/interoperabilitas/datasource/simdasi/id/28/"
        parent <- paste0(kdprov, kdkab, "000")
        req <- request(url_awal) |>
            req_url_path_append("parent", parent) |>
            req_url_path_append("key", key)
    }
    
    woah <- req |>
        req_perform()
    
    item_list <- woah$body |>
        rawToChar() |>
        jsonlite::fromJSON()
    
    item_list_tbl <- item_list$data$data[[2]] |> tibble()
    
    return(item_list_tbl)
}



simdasi_get_table <- function(kdprov = "00", kdkab = "00", key = Sys.getenv("WebAPI_KEY"), wilayah) {
    
    if(is.null(wilayah)) {
        wilayah <- paste0(kdprov, kdkab, "000")
    }
    
    if(!is.null(wilayah)) {
        wilayah <- as.character(wilayah)
    }
    
    url_awal <- "https://webapi.bps.go.id/v1/api/interoperabilitas/datasource/simdasi/id/23/"
    
    req <- request(url_awal) |>
        req_url_path_append("wilayah", wilayah) |>
        req_url_path_append("key", key)    
    
    
    woah <- req |>
        req_perform()
    
    item_list <- woah$body |>
        rawToChar() |>
        jsonlite::fromJSON()
    
    item_list_tbl <- item_list$data$data[[2]] |> tibble()
    
    return(item_list_tbl)
}



simdasi_get_data <- function(kdprov, kdkab, tahun, id_tabel, key = Sys.getenv("WebAPI_KEY"), wilayah) {
    
    if(is.null(wilayah)) {
        wilayah <- paste0(kdprov, kdkab, "000")
    }
    
    if(!is.null(wilayah)) {
        wilayah <- as.character(wilayah)
    }
    
    url_awal <- "https://webapi.bps.go.id/v1/api/interoperabilitas/datasource/simdasi/id/25/"

    req <- request(url_awal) |>
        req_url_path_append("wilayah", wilayah) |>
        req_url_path_append("tahun", tahun) |>
        req_url_path_append("id_tabel", id_tabel) |>
        req_url_path_append("key", key)

    woah <- req |>
        req_perform()

    item_list <- woah$body |>
        rawToChar() |>
        jsonlite::fromJSON()

    item_list_tbl <- item_list$data$data[[2]] |> tibble()

    item_list_tbl

}

```

## 1 Tahun terakhir 

Welp, sebelah mencoba berjam-jam selama 2 hari ini. Mending kita kerja yang mudah terlebih dahulu.
Mari kita unduh data untuk tahun te

```{r download-semua-tabel}

tbl_5310 <- simdasi_get_area(level = "kab", kdprov = 53, kdkab = 10) |>
    filter(kode == "5310000") |> 
    mutate(tabel = map(.x = kode, .f = ~ simdasi_get_table(wilayah = .x))) |> 
    unnest(tabel) |>
    rename(tahun = ketersediaan_tahun) |> 
    unnest(tahun)


unduh_tabel <- function(df) {
    y <- df |>
    mutate(data = 
               pmap(
                   .l = list(kode, id_tabel, tahun), 
                   .f = ~ simdasi_get_data(wilayah = kode, id_tabel = id_tabel, tahun = tahun),
                   .progress = TRUE
               )
    )
    
    return(y)
}

```


```{r download-tahun-terbaru}

int_tahun_berjalan <- 2024
int_last_year = int_tahun_berjalan - 1

tbl_5310_last_year <- 
    tbl_5310 |> 
    group_by(kode_tabel) |>
    filter(tahun == int_last_year) |>
    unduh_tabel()

write_rds(tbl_5310_last_year, "output/rds/simdasi/2nd/tbl_DDA_terbaru.rds")
```